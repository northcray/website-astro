---
import { client } from "../../lib/directus";
export const prerender = false;
import MainLayout from "../../components/layouts/MainLayout.astro";
import PageHeader from "../../components/ui/PageHeader.astro";
import Container from "../../components/ui/Container.astro";
import Section from "../../components/ui/Section.astro";
import SectionHeader from "../../components/ui/SectionHeader.astro";

let buttonText = "Next";
let emailValue = "";
let errors = "";
let formType = "identify";

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();

    if (data.get("type") == "identify") {
      // if email is empty, return error
      // if email is found in database, show login form
      formType = "signin";
      const email = data.get("email");
      emailValue = email?.toString() || "";
      buttonText = "Sign In";
      // if email is not found, show registration form
    }

    if (data.get("type") == "signin") {
      console.log(Object.fromEntries(data.entries()));
      // validate email and password
      const email = data.get("email");
      const password = data.get("password");

      if (email && password) {
        const result = await client.login(email as string, password as string);

        console.log(result);
      }
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<MainLayout>
  <PageHeader
    breadcrumbs={[{ label: "North Cray Residents Association", href: "/" }]}
  />
  <Container classes="">
    <Section>
      <form class="flex flex-col gap-2" method="post">
        <input type="hidden" name="type" value={formType} />
        {
          ["identify", "signin"].includes(formType) && (
            <>
              <label for="email">Email</label>
              <input
                name="email"
                type="email"
                required
                class="input"
                value={emailValue}
                placeholder="someone@example.com"
                autocomplete="email"
              />
            </>
          )
        }
        {
          formType === "signin" && (
            <>
              <label for="password">Password</label>
              <input
                name="password"
                type="password"
                required
                class="input"
                autocomplete="current-password"
              />
            </>
          )
        }

        <button class="mt-4 button sm:max-w-fit" type="submit"
          >{buttonText}</button
        >
      </form>
    </Section>
    <Section />
  </Container>
</MainLayout>
