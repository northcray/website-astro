---
export const prerender = true;
import { getCollection, render } from "astro:content";
import MainLayout from "@layouts/MainLayout.astro";
import Section from "@ui/Section.astro";
import Container from "@ui/Container.astro";
import PageHeader from "@ui/PageHeader.astro";
import { formatArchivePosts } from "@lib/utils";
import Meta from "@ui/Meta.astro";
import { ArrowLeft, ArrowRight } from "@lucide/astro";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const allPosts = await getCollection("newsmail");

  const sortedPosts = formatArchivePosts(allPosts);

  return sortedPosts.map((item, ind, arr) => ({
    params: { emailId: item.post.id },
    props: { post: item.post, prev: arr[ind - 1], next: arr[ind + 1] },
  }));
}

// 2. For your template, you can get the entry directly from the prop
const { post, prev, next } = Astro.props;
const { emailId } = Astro.params;
const { Content } = await render(post);
---

<MainLayout
  seo={{
    title: "Email Item",
    description:
      "Explore the details of a specific email from the NCRA archive, including its content and metadata.",
  }}
>
  <PageHeader
    breadcrumbs={[
      { label: "Home", href: "/" },
      { label: "Association", href: "/ra" },
      { label: "Archive", href: "/ra/archive" },
      { label: "Emails", href: "/ra/archive/emails" },
    ]}
  />
  <Container classes="grid grid-cols-12 gap-8 my-6">
    <Section class="col-span-6 lg:col-span-2 pt-0!">
      {
        prev && (
          <Meta label="Previous">
            <a
              href={prev.href}
              transition:name={prev.post.id}
              class="nc-link nc-focus w-fit flex gap-1 items-center"
            >
              <ArrowLeft /> {prev.date}
            </a>
          </Meta>
        )
      }
    </Section>
    <Section
      class="col-span-6 lg:col-span-2 lg:order-last flex justify-end pt-0!"
    >
      {
        next && (
          <Meta label="Next">
            <a
              href={next.href}
              transition:name={next.post.id}
              class="nc-link nc-focus w-fit flex gap-1 items-center"
            >
              {next.date} <ArrowRight />
            </a>
          </Meta>
        )
      }
    </Section>
    <Section
      class="archive-item col-span-12 lg:col-span-8 max-w-full lg:bg-gray-100 lg:dark:bg-gray-800 rounded lg:p-6 pt-8! mx-auto"
    >
      <div transition:name={emailId}>
        <Content />
      </div>
    </Section>
  </Container>
</MainLayout>
