---
import { readItems } from "@directus/sdk";
import Container from "./Container.astro";
import directus from "@lib/directus";

const { nav_items } = await directus.request(
  readItems("site_settings", {
    fields: ["nav_items"],
  }),
);

const navItems: { href: string; label: string }[] = [
  { label: "Home", href: "/" },
  ...nav_items,
];
---

<section class="bg1 md:sticky top-0 z-20">
  <Container>
    <nav class="font-light">
      <ul class="inline-flex flex-wrap list-none m-0 p-0 -mx-4">
        {
          navItems.map((nav) => (
            <li>
              <a
                data-navlink
                class="nc-focus-outline transition-colors no-underline px-4 py-4 block hover:underline text-sm md:text-base"
                href={nav.href}
              >
                {nav.label}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </Container>
</section>

<script type="module" is:inline>
  function updateActiveLinks() {
    const current = window.location.pathname;
    const navLinks = document.querySelectorAll("[data-navlink]");

    const activeClasses = [
      "bg-gray-100",
      "text-slate-800",
      "dark:bg-cinder-600",
      "dark:text-white",
    ];
    const inActiveClasses = ["hover:bg-sky-900", "hover:dark:bg-cinder-500"];

    navLinks.forEach((link) => {
      const href = link.getAttribute("href");

      link.classList.remove(...activeClasses, ...inActiveClasses);
      const isRoot = href === "/" && current === "/";
      const isNotRoot = href !== "/" && current.startsWith(href);

      if (isRoot || isNotRoot) {
        link.classList.add(...activeClasses);
      } else {
        link.classList.add(...inActiveClasses);
      }
    });
  }

  document.addEventListener("astro:after-swap", updateActiveLinks); // view-transitions hook
  document.addEventListener("DOMContentLoaded", updateActiveLinks);
</script>
