---
import { readItems } from "@directus/sdk";
import Container from "./Container.astro";
import { createDirectusClient } from "@lib/directus";
import type { SiteSettings } from "@lib/directus/schema";

const directus = createDirectusClient();

const { nav_items } = (await directus.request(
  readItems("site_settings" as any, {
    fields: ["nav_items"],
  }),
)) as unknown as SiteSettings;

const navItems: { href: string; label: string }[] = [
  { label: "Home", href: "/" },
  ...nav_items,
];

import { X, Menu } from "@lucide/astro";
---

<style>
  section:has(.menu input[type="checkbox"]:checked) nav {
    height: 100vh;
  }

  section:has(.menu input[type="checkbox"]:checked) .lucide-menu {
    display: none;
  }

  section:has(.menu input[type="checkbox"]:checked) .lucide-x {
    display: inline-block;
  }
</style>

<section class="bg1 sticky top-0 z-20">
  <Container>
    <div class="mobile-logo sm:hidden flex items-center justify-between">
      <a class="font-semibold" href="/">North Cray</a>
      <button class="menu flex py-2 items-center justify-center">
        <label for="mobile-nav-toggle">
          <Menu size={40} stroke-width={1} />
          <X size={40} stroke-width={1} class="hidden" />
          <input
            type="checkbox"
            id="mobile-nav-toggle"
            class="appearance-none h-0 w-0 absolute"
          />
        </label>
      </button>
    </div>

    <nav
      class="-mx-4 sm:mx-0 h-0 sm:h-full overflow-hidden sm:overflow-visible flex-col transition-height duration-150"
    >
      <ul
        id="main-navigation"
        class="sm:inline-flex sm:flex-wrap list-none m-0 p-0 -mx-4"
      >
        {
          navItems.map((nav, i) => (
            <li>
              <a
                data-navlink
                class="nc-focus-outline text-inherit no-underline px-8 sm:px-4 py-4 block hover:underline text-lg sm:text-base transition-none"
                href={nav.href}
              >
                {nav.label}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </Container>
</section>

<script is:inline data-astro-rerun>
  function updateActiveLinks() {
    const current = window.location.pathname;
    const navLinks = document.querySelectorAll("[data-navlink]");

    const activeClasses = [
      "bg-gray-100",
      "text-slate-800",
      "dark:bg-cinder-500",
      "dark:text-white",
    ];
    const inActiveClasses = ["hover:bg-sky-900", "hover:dark:bg-cinder-500"];

    navLinks.forEach((link) => {
      const href = link.getAttribute("href");

      link.classList.remove(...activeClasses, ...inActiveClasses);
      const isRoot = href === "/" && current === "/";
      const isNotRoot = href !== "/" && current.startsWith(href);

      if (isRoot || isNotRoot) {
        link.classList.add(...activeClasses);
      } else {
        link.classList.add(...inActiveClasses);
      }
    });
  }

  function setupNav() {
    const checkbox = document.getElementById("mobile-nav-toggle");

    if (!checkbox) return;

    // close the menu when breakpoint changes
    window.onresize = function () {
      if (checkbox.checked) {
        checkbox.checked = false;
      }
    };

    document.addEventListener("click", (event) => {
      const target = event.target;
      if (
        checkbox.checked &&
        target instanceof HTMLElement &&
        target.closest("[data-navlink]")
      ) {
        checkbox.checked = false;
      }
    });
  }

  document.addEventListener("astro:page-load", () => {
    updateActiveLinks();
    setupNav();
  });
</script>
