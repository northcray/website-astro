---
export interface Props {
  hideBorders?: boolean;
  details: Array<{
    label: string;
    value: string;
    action?: {
      label: string;
      href: string;
    };
  }>;
}
const { details = [], hideBorders } = Astro.props;
---

<div
  class:list={[
    "my-10 md:w-fit border-gray-100 dark:border-gray-800",
    { "border-b": !hideBorders },
  ]}
>
  {
    details.map((d) => (
      <div
        class:list={[
          { "border-t": !hideBorders },
          "grid gap-2 md:gap-4 grid-cols-6 text-lg border-gray-100 dark:border-gray-800 py-1",
        ]}
      >
        <div class="flex col-span-6 md:col-span-1 font-semibold opacity-70 text-base md:text-lg">
          {d.label}
        </div>
        <div class="flex col-span-6 md:col-span-4">{d.value}</div>
        {d.action && (
          <div class="flex col-span-1 md:justify-end">
            <a
              href={d.action.href}
              class="text-base nc-link nc-focus outline-none"
            >
              {d.action.label}
            </a>
          </div>
        )}
      </div>
    ))
  }
</div>
